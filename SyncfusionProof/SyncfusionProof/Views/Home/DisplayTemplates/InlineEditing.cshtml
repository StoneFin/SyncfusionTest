@model SyncfusionProof.Models.HomeModel

@using Syncfusion.JavaScript.Models

@(Html.EJ().Grid<SyncfusionProof.Models.TestModel>("InlineEditingGrid")
  .Datasource(Model.TestModels)
  .AllowSelection()
  .SelectionType(SelectionType.Multiple)
  .AllowSorting()
  .AllowPaging()
  .AllowResizing()
  .AllowScrolling()
  .ScrollSettings(x => { x.Width("100%"); })
  .MinWidth(500)
  .IsResponsive()
  //use ShowAddNewRow to automatically add a row whenever an edit finishes
  //.EditSettings(x => { x.AllowAdding().AllowDeleting().AllowEditing(); })
  .EditSettings(x => { x.AllowAdding().AllowDeleting().AllowEditing().ShowAddNewRow(); })
  .ToolbarSettings(x => x.ShowToolbar().ToolbarItems(y =>
  {
    y.AddTool(ToolBarItems.Search);
    y.AddTool(ToolBarItems.Add);
    y.AddTool(ToolBarItems.Edit);
    y.AddTool(ToolBarItems.Delete);
    y.AddTool(ToolBarItems.Update);
    y.AddTool(ToolBarItems.Cancel);
  }))
  .Columns(x =>
  {
    x.Field("OrderId").HeaderText("Order ID").IsIdentity(true).IsPrimaryKey(true).AllowEditing(false).Add();
    x.Field("CustomerId").HeaderText("Customer ID").Add();
    x.Field("EmployeeId").HeaderText("Employee ID").Add();
    x.Field("Manufacturer").DataSource(Model.Manufacturers).HeaderText("Manufacturer Name").EditType(EditingType.Dropdown).Add();
    x.Field("Freight").HeaderText("Freight").Format("{0:C}").Add();
    x.Field("FreightDetails.Freight2").HeaderText("Freight2").Format("{0:C}").Add();
    x.Field("OrderDate").HeaderText("Order Date").Format("{0:MM/dd/yyyy}").IsIdentity(true).AllowEditing(false).Add();
    x.Field("ShipCity").HeaderText("Ship City").Add();
    x.Field("ShipState").HeaderText("Ship State").Add();
  })
  .ClientSideEvents(x =>
  {
    x.ActionComplete("inlineEditActionComplete");
    x.ActionBegin("inlineEditActionBegin");
    x.ToolbarClick("toolbarClick");
  })
)
