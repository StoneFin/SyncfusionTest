@model IEnumerable<SyncfusionProof.Models.TestModel>

@using Syncfusion.JavaScript.Models

@(Html.EJ().Grid<IEnumerable<SyncfusionProof.Models.TestModel>>("InlineEditingGrid")
  .Datasource(Model)
  .AllowSelection()
  .SelectionType(SelectionType.Multiple)
  .AllowSorting()
  .AllowPaging()
  .AllowResizing()
  .AllowScrolling()
  .ScrollSettings(x => { x.Width("100%"); })
  .MinWidth(500)
  .IsResponsive()
  .EditSettings(x => { x.AllowAdding().AllowDeleting().AllowEditing(); })
  .ToolbarSettings(x => x.ShowToolbar().ToolbarItems(y =>
  {
    y.AddTool(ToolBarItems.Search);
    y.AddTool(ToolBarItems.Add);
    y.AddTool(ToolBarItems.Edit);
    y.AddTool(ToolBarItems.Delete);
    y.AddTool(ToolBarItems.Cancel);
  }))
  .Columns(x =>
  {
    x.Field("OrderId").HeaderText("Order ID").IsPrimaryKey(true).Add();
    x.Field("CustomerId").HeaderText("Customer ID").Add();
    x.Field("EmployeeId").HeaderText("Employee ID").Add();
    x.Field("Freight").HeaderText("Freight").Format("{0:C}").Add();
    x.Field("FreightDetails.Freight2").HeaderText("Freight2").Format("{0:C}").Add();
    x.Field("OrderDate").HeaderText("Order Date").Format("{0:MM/dd/yyyy}").IsIdentity(true).AllowEditing(false).Add();
    x.Field("ShipCity").HeaderText("Ship City").Add();
    x.Field("ShipState").HeaderText("Ship State").Add();
    x.Field("FavoriteBunny").HeaderText("Favorite Bunny").Add();
    x.Field("ShipCountry").HeaderText("ShipCountry").Add();
    x.Field("ShipPostalCode").HeaderText("Ship Postal Code").Add();
    x.Field("Verified").HeaderText("Verified").Add();
  })
)
